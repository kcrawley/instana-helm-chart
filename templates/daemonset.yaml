{{- if .Values.instana.agent.key -}}
{{- if .Values.instana.zone -}}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ .Values.instana.agent.name }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  template:
    metadata:
      labels:
        app: {{ .Values.instana.agent.name }}
    spec:
      serviceAccount: {{ .Values.instana.agent.name }}
      hostIPC: true
      hostNetwork: true
      hostPID: true
      containers:
        - name: {{ .Values.instana.agent.name }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: INSTANA_AGENT_LEADER_ELECTOR_PORT
              value: "{{ .Values.instana.leaderElectorPort }}"
            - name: INSTANA_ZONE
              value: {{ .Values.instana.zone }}
            - name: INSTANA_AGENT_ENDPOINT
              value: {{ .Values.instana.agent.endpoint.host }}
            - name: INSTANA_AGENT_ENDPOINT_PORT
              value: "{{ .Values.instana.agent.endpoint.port }}"
            - name: INSTANA_AGENT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.instana.agent.name }}-secret
                  key: key
          securityContext:
            privileged: true
          volumeMounts:
            - name: dev
              mountPath: /dev
            - name: run
              mountPath: /var/run/docker.sock
            - name: sys
              mountPath: /sys
            - name: log
              mountPath: /var/log
            - name: machine-id
              mountPath: /etc/machine-id
            - name: configuration
              subPath: configuration.yaml
              mountPath: /root/configuration.yaml
            - name: agent-configuration
              subPath: cfg
              mountPath: /opt/instana/agent/etc/instana/com.instana.agent.main.config.Agent.cfg
          livenessProbe:
            exec:
              command:
                - echo
                - noop
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - echo
                - noop
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          resources:
            requests:
              memory: "256Mi"
              cpu: "0.5"
            limits:
              memory: "512Mi"
              cpu: "1.5"
        - name: {{ .Values.instana.agent.name }}-leader-elector
          image: gcr.io/google-containers/leader-elector:0.5
          args: ["--election=instana", "--http=0.0.0.0:{{ .Values.instana.leaderElectorPort }}"]
          resources:
            requests:
              cpu: 0.1
              memory: 64Mi
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.instana.leaderElectorPort }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.instana.leaderElectorPort }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
      volumes:
        - name: dev
          hostPath:
            path: /dev
        - name: run
          hostPath:
            path: /var/run/docker.sock
        - name: sys
          hostPath:
            path: /sys
        - name: log
          hostPath:
            path: /var/log
        - name: machine-id
          hostPath:
            path: /etc/machine-id
        - name: configuration
          configMap:
            name: instana-configuration
        - name: agent-configuration
          configMap:
            name: instana-agent-configuration
{{- end -}}
{{- end -}}
